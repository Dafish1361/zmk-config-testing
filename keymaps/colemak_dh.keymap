#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// Derived from https://github.com/guruc13/zmk_sweep_colemak_dh
// Which is derived from https://github.com/manna-harbour/miryoku

#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUNC 4
#define UTIL 5


// adjust mod-tap
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

/ {

  combos {
    compatible = "zmk,combos";
    combo_esc {
      timeout-ms = <50>;
      key-positions = <1 2>;
      bindings = <&kp ESC>;
     };
    combo_bspc {
      timeout-ms = <50>;
      key-positions = <7 8>;
      bindings = <&kp BSPC>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    cond_layer_util {
        if-layers = <NAV FUNC>;
        then-layer = <UTIL>;
    };
  };


  keymap {
    compatible = "zmk,keymap";

// 0 BASE LAYER
// ------------------------------------     ----------------------------------------
// |   Q  |   W  |   F  |   P  |   B  |     |      |      |       |        |  DQT  |
// |      |      |      |      |      |     |  J   |   L  |   U   |    Y   |  SQT  |
// |----------------------------------|     |--------------------------------------|
// | LGUI | LALT | LCTL | LSHT |      |     |      | LSHT | LCTL  |  LALT  | RGUI  |
// |   A  |   R  |   S  |   P  |   G  |     |  M   |   N  |   E   |    I   |   O   |
// |----------------------------------|     |--------------------------------------|
// |      |      |      |      |      |     |      |      |   LT  |   GT   | QMARK |
// |   Z  |   X  |   C  |   D  |   V  |     |  K   |   H  | COMMA | PERIOD | SLASH |
// -----------------------------------|     |---------------------------------------
//                  | SYM(1) | NUM(2) |     | NAV(3) | FUNC(4) |
//                  |  BSPC  | SPACE  |     | ENTER  |   TAB   |
//                  -------------------     --------------------
//

    base_layer {
      label = "base";
      bindings = <
      &kp Q      &kp W      &kp F       &kp P       &kp B  &kp J &kp L       &kp U       &kp Y      &kp SQT
      &mt LGUI A &mt LALT R &mt LCTRL S &mt LSHFT T &kp G  &kp M &mt LSHFT N &mt LCTRL E &mt LALT I &mt LGUI O
      &kp Z      &kp X      &kp C       &kp D       &kp V  &kp K &kp H       &kp COMMA   &kp PERIOD &kp SLASH
                              &lt SYM BSPC  &lt NUM SPACE        &lt NAV ENTER  &lt FUNC TAB
        >;
    };

// 1 SYMS LAYER
// -------------------------------------     ----------------------------------------
// |      | ESC  |      | DEL  |       |     | TILDE |       |       |       |       |
// |      |      |      |      |       |     | GRAVE | AMPS  | ASTRK | LPAR  | RPAR  |
// |-----------------------------------|     |---------------------------------------|
// | LGUI | LALT | LCTL | LSHT |       |     | LBRC  |       |       |       | PIPE  |
// |      |      |      |      |       |     | LBKT  | DLLR  | PRCNT | CARET | BSLH  |
// |-----------------------------------|     |---------------------------------------|
// |      |      |      |      |       |     | RBRC  |       |       |       | QMARK |
// |      |      |      |      |       |     | RBKT  | EXCL  |  AT   | HASH  | SLASH |
// |-----------------------------------|     |-------------------------------------
//                      | ***  |       |     |       |       |
//                      | ***  | TRANS |     | TRANS | TRANS |
//                      ----------------     -----------------
//

    sym_layer {
      label = "syms";
      bindings = <
      &none    &kp ESC  &none     &kp DEL   &none      &kp GRAVE &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR
      &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none      &kp LBKT  &kp DLLR &kp PRCNT &kp CARET &kp BSLH
      &none    &none    &none     &none     &none      &kp RBKT  &kp EXCL &kp AT    &kp HASH  &kp SLASH
                                  &none     &trans     &trans    &trans
      >;
    };


// 2 NUMSLAYER
// ------------------------------------     -----------------------------------------
// |      | ESC  |      | DEL  |      |     |       | AMPS  | ASTRK | LPAR  | RPAR  |
// |      |      |      |      |      |     | TRANS |  N7   |   N8  |  N9   |   N0  |
// |----------------------------------|     |---------------------------------------|
// | LGUI | LALT | LCTL | LSHT |      |     |       | DLLR  | PRCNT | CARET | UNDER |
// |      |      |      |      |      |     | TRANS |  N4   |   N5  |   N6  | MINUS |
// |----------------------------------|     |---------------------------------------|
// |      |      |      |      |      |     |       | EXCL  |   AT  |  HASH | PLUS  |
// |      |      |      |      |      |     | TRANS |  N1   |   N2  |   N3  | EQUAL |
// |----------------------------------|     |----------------------------------------
//                      |      | ***  |     |       |       |
//                      |      | ***  |     | TRANS | TRANS |
//                      ---------------     -----------------
//

    num_layer {
      label = "nums";
      bindings = <
      &none    &kp ESC  &none     &kp DEL   &none     &trans &kp N7  &kp N8  &kp N9  &kp N0
      &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none     &trans &kp N4  &kp N5  &kp N6  &kp MINUS
      &none    &none    &none     &none     &none     &trans &kp N1  &kp N2  &kp N3  &kp EQUAL
                                  &trans    &none     &trans &trans
      >;
    };


// 3 NAV LAYER
// --------------------------------------     ----------------------------------------------------
// |      |      |      |       |       |     |   UNDO    |   CUT    |  COPY    |   PASTE   |    |
// |      | HOME |  UP  | PG_UP |  INS  |     |   LC(Z)   |  LC(X)   |  LC(C)   |   LC(V)   |    |
// |------------------------------------|     |--------------------------------------------------|
// |      |      |      |       |       |     |           |          |          |           |    |
// | CAPS | LEFT | DOWN | RIGHT |  DEL  |     |  K_MUTE   | K_VOL_DN | K_VOL_UP |           |    |
// |------------------------------------|     |--------------------------------------------------|
// |      |      |      |       |       |     |           |          |          |           |    |
// | LGUI | END  |      | PG_DN | K_APP |     | C_BRI_MIN | C_BRI_DN | C_BRI_UP | C_BRI_MAX |    |
// |------------------------------------|     |---------------------------------------------------
//                      | BSPC  | ENTER |     | *** |     |
//                      |       |       |     | *** |     |
//                      -----------------     -------------
//

    nav_layer {
      label = "navi";
      bindings = <
      &none    &kp HOME &kp UP   &kp PG_UP &kp INS     &kp LC(Z)     &kp LC(X)    &kp LC(C) &kp LC(V)         &none
      &kp CAPS &kp LEFT &kp DOWN &kp RIGHT &kp DEL     &kp K_KUTE    &kp K_VOL_DN &kp K_VOL_UP &none          &none
      &kp LGUI &kp END  &none    &kp PG_DN &kp K_APP   &kp C_BRI_MIN &kp C_BRI_DN &kp C_BRI_UP &kp C_BRI_MAX  &none
                                 &trans    &trans      &none      &trans
      >;
    };


// 4 FUNC LAYER
// ---------------------------------------     -------------------------------
// |             |     |     |     |     |     |     |     |     |     |     |
// | PSCRN       | F7  | F8  | F9  | F10 |     |     |     |     |     |     |
// |-------------------------------------|     |-----------------------------|
// |             |     |     |     |     |     |     |     |     |     |     |
// | SLCK        | F4  | F5  | F6  | F11 |     |     |     |     |     |     |
// |-------------------------------------|     |-----------------------------|
// |             |     |     |     |     |     |     |     |     |     |     |
// | PAUSE_BREAK | F1  | F2  | F3  | F12 |     |     |     |     |     |     |
// |-------------------------------------|     |------------------------------
//                        |      |       |     |        | *** |
//                        | BSPC | ENTER |     | NAV(3) | *** |
//                        ----------------     ----------------
//

    func_layer {
      label = "func";
      bindings = <
      &kp PSCRN        &kp F7  &kp F8  &kp F9   &kp F12      &none     &none      &none     &none    &none
      &kp SLCK         &kp F4  &kp F5  &kp F6   &kp F11      &none     &none      &none     &none    &none
      &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3   &kp F10      &none     &none      &none     &none    &none
                                     &kp BSPC &kp ENTER      &mo NAV   &none
      >;
    };


// 5 UTIL LAYER
// --------------------------------------     ----------------------------------
// |        |        |    |        |    |     |     |     |  boot  |     |     |
// | BT_CLR |        |    |        |    |     |     |     | loader |     |     |
// |------------------------------------|     |--------------------------------|
// |        |        |    |        |    |     |     |     |        |     |     |
// |        | BT_PRV |    | BT_NXT |    |     |     |     |        |     |     |
// |------------------------------------|     |--------------------------------|
// |        |        |    |        |    |     |     |     |        |     |     |
// |        |        |    |        |    |     |     |     |        |     |     |
// |------------------------------------|     |---------------------------------
//                        |        |    |     | *** | *** |
//                        |        |    |     | *** | *** |
//                        ---------------     -------------
//

    util_layer {
      label = "utils";
      bindings = <
      &bt BT_CLR &none      &none   &none      &none        &none   &none   &bootloader &none   &none
      &none      &bt BT_PRV &none   &bt BT_NXT &none        &none   &none   &none       &none   &none
      &none      &none      &none   &none      &none        &none   &none   &none       &none   &none
                                    &none      &none        &none   &none
      >;
    };
  };
};
