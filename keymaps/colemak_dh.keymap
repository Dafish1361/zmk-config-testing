#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// Derived from https://github.com/guruc13/zmk_sweep_colemak_dh
// Which is derived from https://github.com/manna-harbour/miryoku

#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUNC 4
#define UTIL 5


// adjust mod-tap
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
         };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        cond_layer_mgmt {
            if-layers = <NAV FUNC>;
            then-layer = <UTIL>;
        };
    };


    keymap {
            compatible = "zmk,keymap";

        base_layer {
            label = "base";
            bindings = <
            &kp Q       &kp W       &kp F        &kp P        &kp B        &kp J    &kp L        &kp U        &kp Y        &kp APOS
            &mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G        &kp M    &mt LSHFT N  &mt LCTRL E  &mt LALT I   &mt LGUI O
            &kp Z       &kp X       &kp C        &kp D        &kp V        &kp K    &kp H        &kp COMMA    &kp PERIOD   &kp SLASH
                                        &lt SYM BSPC  &lt NUM SPACE        &lt NAV ENTER  &lt FUNC TAB
            >;
        };

        sym_layer {
            label = "syms";
            bindings = <
            &none     &none     &none      &none      &none          &kp LBRC    &kp AMPS    &kp ASTRK    &kp LPAR     &kp RBRC
            &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp ESC        &kp PLUS    &kp DLLR    &kp PRCNT    &kp CARET    &kp COLON
            &none     &kp RALT  &none      &kp DEL    &none          &kp PIPE    &kp EXCL    &kp AT       &kp HASH     &kp TILDE
                                           &none      &none          &kp UNDER   &kp RPAR
            >;
        };

        num_layer {
            label = "nums";
            bindings = <
            &none     &none     &none      &none       &none            &kp LBKT     &kp N7    &kp N8    &kp N9    &kp RBKT
            &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT   &kp COMMA        &kp EQUAL    &kp N4    &kp N5    &kp N6    &kp SCLN
            &none     &kp RALT  &none      &kp PERIOD  &none            &kp BSLH     &kp N1    &kp N2    &kp N3    &kp GRAVE
                                           &none       &none            &kp MINUS    &kp N0
            >;
        };

        nav_layer {
            label = "navi";
            bindings = <
            &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp INS          &none      &none          &none      &none     &none
            &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp CAPS         &kp K_APP  &kp LSHFT      &kp LCTRL  &kp LALT  &kp LGUI
            &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)        &none      &kp LS(LG(S))  &none      &kp RALT  &none
                                             &kp ENTER  &kp BSPC         &none      &none
            >;
        };

        func_layer {
            label = "func";
            bindings = <
            &kp F12    &kp F7    &kp F8    &kp F9     &kp PSCRN              &none      &none       &none      &none     &none
            &kp F11    &kp F4    &kp F5    &kp F6     &kp SLCK               &kp K_APP  &kp LSHFT   &kp LCTRL  &kp LALT  &kp LGUI
            &kp F10    &kp F1    &kp F2    &kp F3     &kp PAUSE_BREAK        &none      &kp K_MUTE  &none      &kp RALT  &none
                                           &kp ENTER  &kp BSPC               &mo NAV  &none
            >;
        };

        util_layer {
            label = "utils";
            bindings = <
            &bt BT_CLR  &none       &none    &none       &none        &none    &none    &bootloader  &none    &none
            &none       &bt BT_PRV  &none    &bt BT_NXT  &none        &none    &none    &none        &none    &none
            &none       &none       &none    &none       &none        &none    &none    &none        &none    &none
                                             &none       &none        &none    &none
            >;
        };
    };
};
